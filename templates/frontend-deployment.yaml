apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.frontend.service_name }}
  labels:
    app: {{ .Values.frontend.service_name }}
spec:
  replicas: {{ .Values.frontend.replicas }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ .Values.frontend.service_name }}
  template:
    metadata:
      labels:
        app: {{ .Values.frontend.service_name }}
    spec:
      restartPolicy: Always
      containers:
      - name: {{ .Values.frontend.service_name }}
        image: {{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}
        imagePullPolicy: {{ .Values.frontend.pullPolicy }}
        resources:
          limits:
            cpu: {{ .Values.frontend.resources.limits.cpu }}
            memory: {{ .Values.frontend.resources.limits.memory }}
          requests:
            cpu: {{ .Values.frontend.resources.requests.cpu }}
            memory: {{ .Values.frontend.resources.requests.memory }}
        ports:
        - containerPort: 80
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 3
          failureThreshold: 3
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      imagePullSecrets:
      - name: "utils-docker"